<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:component-scan base-package="controllers" />
	<context:component-scan base-package="dao" />
	<context:component-scan base-package="hiberanate/model" />
	
	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
 		<property name="driverClass" value="com.mysql.jdbc.Driver" /> <!-- esta clase esta definida dentro el jar de mysql -->
		<property name="jdbcUrl" value="${database.jdbcUrl}" />
		<property name="user" value="${database.user}" />
		<property name="password" value="${database.password}" />
		<!-- these are C3P0 properties -->
		<property name="acquireIncrement" value="1" />
		<property name="minPoolSize" value="1" />
		<property name="maxPoolSize" value="10" />
		<property name="maxIdleTime" value="600" />
	</bean>
	
	
	<!-- 
		Es el encargado de construir la sesion de hibernate, Tiene el estado de archivos hbm (hibernate mapping)
		hibernate.dialect: El dialecto que es a donde apunta, a que base de datos
		hibernate.show_sql: show sql es para que muestre las queries en consola
		hbm2ddl.auto: esto es para que a partir del hbm cree la base de datos, validate significa que cuando levanta la aplicacion
				va a buscar las tablas que matcheen con los objetos, se recomienda dejar validate
				
		mappingResources: Aca se realcionan los objetos de modelo con la base, cada vez que queremos guardar un objeto en la base
						tenemos que crear un xml hbm  
	 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="mappingResources">
			<list>
				<value>/hibernate/model/Usuario.hbm.xml</value>
				<value>/hibernate/model/Evento.hbm.xml</value>
				<value>/hibernate/model/SalaReunion.hbm.xml</value>
				<value>/hibernate/model/Invitado.hbm.xml</value>
				
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hbm2ddl.auto">validate</prop>
				<prop key="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="objectMapper" ref="jacksonObjectMapper" />
				</bean>
			</list>
		</property>
	</bean>

</beans>